{
	"New OpenGL Window": {
		"prefix": "gwindow",
		"body": [
            "#include <iostream>",
            "#include <glad/glad.h>",
            "#include <GLFW/glfw3.h>",
            "",
            "namespace ${1:Ch01} {",
            "\tnamespace ${2:Test} {",
            "\t\tvoid framebuffer_size_callback(GLFWwindow* window, int width, int height)",
            "\t\t{",
            "\t\t\tglViewport(0, 0, width, height);",
            "\t\t}",
            "\t\t",
            "\t\tvoid processInput(GLFWwindow* window)",
            "\t\t{",
            "\t\t\tif (glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)",
            "\t\t\t{",
            "\t\t\t\tglfwSetWindowShouldClose(window, true);",
            "\t\t\t}",
            "\t\t}",
            "\t\t",
            "\t\tint main(int argc, char * argv[]) {",
            "\t\t\tglfwInit();",
            "\t\t\tglfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);",
            "\t\t\tglfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);",
            "\t\t\tglfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);",
            "\t\t",
            "#ifdef __APPLE__",
            "\t\t\tglfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);",
            "#endif",
            "\t\t",
            "\t\t\tGLFWwindow* window = glfwCreateWindow(800, 600, \"${3:Test}\", NULL, NULL);",
            "\t\t\tif (!window) {",
            "\t\t\t\tstd::cout << \"Failed to create GLFW window\" << std::endl;",
            "\t\t\t\tglfwTerminate();",
            "\t\t\t\treturn -1;",
            "\t\t\t}",
            "\t\t\tglfwMakeContextCurrent(window);",
            "\t\t\tglfwSetFramebufferSizeCallback(window, framebuffer_size_callback);",
            "\t\t\t",
            "\t\t\tif (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress)) {",
            "\t\t\t\tstd::cout << \"Failed to initialize GLAD\" << std::endl;",
            "\t\t\t\treturn -1;",
            "\t\t\t}",
            "\t\t\t",
            "\t\t\t// SetRC",
            "\t\t\t",
            "\t\t\tdo {",
            "\t\t\t\tprocessInput(window);",
            "\t\t\t\tglClearColor(0.2f, 0.3f, 0.3f, 1.0f);",
            "\t\t\t\tglClear(GL_COLOR_BUFFER_BIT);",
            "\t\t\t\t",
            "\t\t\t\t// Draw",
            "\t\t\t\t",
            "\t\t\t\tglfwSwapBuffers(window);",
            "\t\t\t\tglfwPollEvents();",
            "\t\t\t} while (glfwGetKey(window, GLFW_KEY_ESCAPE) != GLFW_PRESS && !glfwWindowShouldClose(window));",
            "\t\t\t",
            "\t\t\t// clean",
            "\t\t\t",
            "\t\t\tglfwTerminate();",
            "\t\t\treturn 0;",
            "\t\t}",
            "\t}",
            "}",
		],
		"description": "New OpenGL Window with GLFW"
	}
}